// Code generated by MockGen. DO NOT EDIT.
// Source: internal/storage/storage.go

// Package mock_storage is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	storage "github.com/mkarulina/url-reduction-service/internal/storage"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// AddLinkToDB mocks base method.
func (m *MockStorage) AddLinkToDB(link *storage.Link) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddLinkToDB", link)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddLinkToDB indicates an expected call of AddLinkToDB.
func (mr *MockStorageMockRecorder) AddLinkToDB(link interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddLinkToDB", reflect.TypeOf((*MockStorage)(nil).AddLinkToDB), link)
}

// GetAllUrls mocks base method.
func (m *MockStorage) GetAllUrls() ([]storage.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllUrls")
	ret0, _ := ret[0].([]storage.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllUrls indicates an expected call of GetAllUrls.
func (mr *MockStorageMockRecorder) GetAllUrls() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllUrls", reflect.TypeOf((*MockStorage)(nil).GetAllUrls))
}

// GetKeyByLink mocks base method.
func (m *MockStorage) GetKeyByLink(link string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKeyByLink", link)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetKeyByLink indicates an expected call of GetKeyByLink.
func (mr *MockStorageMockRecorder) GetKeyByLink(link interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKeyByLink", reflect.TypeOf((*MockStorage)(nil).GetKeyByLink), link)
}

// GetLinkByKey mocks base method.
func (m *MockStorage) GetLinkByKey(linkKey string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLinkByKey", linkKey)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetLinkByKey indicates an expected call of GetLinkByKey.
func (mr *MockStorageMockRecorder) GetLinkByKey(linkKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLinkByKey", reflect.TypeOf((*MockStorage)(nil).GetLinkByKey), linkKey)
}
